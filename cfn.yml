AWSTemplateFormatVersion: 2010-09-09
Description : Import videos from an FTP server

Parameters:
  DownloadFinderCodeKey:
    Description: The s3 key where the DownloadFinder code can be found
    Type: String
  CheckFrequency:
    Description: The rate which the FTP server is checked for new content
    Type: String
    Default: "rate(60 minutes)"
  InstanceType:
    Description: The EC2 Instance type
    Type: String
    Default: t2.nano
    AllowedValues:
      - t2.nano
      - t2.micro
  BootstrapKey:
    Description: The s3 key where the bootstrapper can be found
    Type: String
  FtpHostname:
    Description: The hostname of the FTP server
    Type: String
  FtpUsername:
    Description: The username for the FTP server
    Type: String
  FtpPassword:
    Description: The password for the FTP server
    Type: String
  FtpPath:
    Description: The path on the FTP server to search for files
    Type: String

Mappings:
  RegionMap:
    us-east-1:
      "64": ami-c58c1dd3
    us-west-2:
      "64": ami-4836a428
    eu-west-1:
      "64": ami-01ccc867
    ap-southeast-2:
      "64": ami-162c2575
    ap-northeast-1:
      "64": ami-923d12f5

Resources:
  DownloadFinder:
    Type : AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !ImportValue s3strm-settings-bucket
        S3Key: !Ref DownloadFinderCodeKey
      Environment:
        Variables:
          FTP_HOSTNAME: !Ref FtpHostname
          FTP_USERNAME: !Ref FtpUsername
          FTP_PASSWORD: !Ref FtpPassword
          FTP_PATH: !Ref FtpPath
          QUEUE_URL: !Ref FTPDownloadQueue
      Description: Populate an SQS queue with files available to download
      FunctionName: s3strm-download-finder
      Handler: lambda.lambda_handler
      MemorySize: 128
      Role: !GetAtt Role.Arn
      Runtime: python2.7
      Timeout: 30
    DependsOn: Role

  DownloadFinderInvokePermissionLambda:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn: !Join [ ":", [ "arn:aws:sns", Ref: "AWS::Region", Ref: "AWS::AccountId", "*" ] ]
      FunctionName: !GetAtt DownloadFinder.Arn

  DownloadFinderInvokePermissionEvents:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt DownloadFinderScheduler.Arn
      FunctionName: !GetAtt DownloadFinder.Arn

  Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version : 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - "lambda.amazonaws.com"
                - "ec2.amazonaws.com"
                - "events.amazonaws.com"
            Action: "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: "s3strm-ftp-importer"
          PolicyDocument:
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "arn:aws:logs:*:*:*"
              -
                Effect: Allow
                Action: "s3:*"
                Resource: !Join [ "", [ "arn:aws:s3:::", !ImportValue s3strm-movies-bucket, "/*" ] ]
              -
                Effect: Allow
                Action: "s3:*"
                Resource: !Join [ "", [ "arn:aws:s3:::", !ImportValue s3strm-settings-bucket, "/*" ] ]
              -
                Effect: Allow
                Action: "cloudformation:ListExports"
                Resource: "*"
              -
                Effect: Allow
                Action: "cloudformation:describeStacks"
                Resource: "*"
              -
                Effect: Allow
                Action: "sqs:*"
                Resource: "*"

  InstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Roles:
        - !Ref Role

  DownloadFinderScheduler:
    Type: "AWS::Events::Rule"
    Properties:
      Description: Scheduler to check for new downloadables
      ScheduleExpression: !Ref CheckFrequency
      State: ENABLED
      Targets:
        -
          Id: "s3strm-download-finder"
          Arn: !GetAtt DownloadFinder.Arn

  FTPDownloadQueue:
    Type: "AWS::SQS::Queue"
    Properties:
      # NOTE: Move to FIFO queues when they are rolled out to more regions
      #ContentBasedDeduplication: true
      #FifoQueue: true
      MaximumMessageSize: 1024
      VisibilityTimeout: 600

  FTPImporterVPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: 172.16.33.0/24

  FTPImporterSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      CidrBlock: 172.16.33.0/27
      VpcId: !Ref FTPImporterVPC

  FTPImporterInternetGatewayAttachment:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      InternetGatewayId: !Ref FTPImporterInternetGateway
      VpcId: !Ref FTPImporterVPC

  FTPImporterInternetGateway:
    Type: "AWS::EC2::InternetGateway"

  FTPImporterRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref FTPImporterVPC

  FTPImporterSubnetRouteTable:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref FTPImporterSubnet
      RouteTableId: !Ref FTPImporterRouteTable

  FTPImporterRoute:
    Type: "AWS::EC2::Route"
    Properties:
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref FTPImporterInternetGateway
      RouteTableId: !Ref FTPImporterRouteTable

  FTPImporterSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Group for the FTPImporter EC2 Instance
      SecurityGroupEgress:
        -
          CidrIp: "0.0.0.0/0"
          FromPort: 1
          IpProtocol: tcp
          ToPort: 65535
        -
          CidrIp: "0.0.0.0/0"
          FromPort: 1
          IpProtocol: udp
          ToPort: 65535
        -
          CidrIp: "0.0.0.0/0"
          FromPort: -1
          IpProtocol: icmp
          ToPort: -1
      SecurityGroupIngress:
        -
          CidrIp: "0.0.0.0/0"
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
      VpcId: !Ref FTPImporterVPC

  FTPImporterLaunchConfiguration:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Properties:
      AssociatePublicIpAddress: true
      IamInstanceProfile: !Ref InstanceProfile
      ImageId: !FindInMap [ RegionMap, !Ref "AWS::Region", "64" ]
      KeyName: s3strm
      SecurityGroups:
        - !Ref FTPImporterSecurityGroup
      InstanceMonitoring: false
      InstanceType: !Ref InstanceType
      UserData:
        "Fn::Base64": |
          #cloud-config
          packages:
            - wget
          write_files:
            - content: |
                #!/bin/bash
                AZ=$(curl 169.254.169.254/latest/meta-data/placement/availability-zone/)
                export AWS_DEFAULT_REGION=${AZ::-1}

                BOOTSTRAP_FILE=$(
                  aws cloudformation describe-stacks \
                    --stack-name s3strm-ftp-importer \
                    --query 'Stacks[].Outputs[?OutputKey == `BootstrapKey`].OutputValue' \
                    --output text
                )
                SETTINGS_BUCKET=$(
                  aws cloudformation list-exports \
                    --query 'Exports[?Name==`s3strm-settings-bucket`].Value' \
                    --output text
                )

                aws s3 cp s3://${SETTINGS_BUCKET}/${BOOTSTRAP_FILE} /tmp/bootstrap.tar.bz2
                mkdir -p /opt/bootstrap
                (
                  cd /opt/bootstrap
                  tar jxvf /tmp/bootstrap.tar.bz2
                  chmod 755 run.sh &> /dev/null
                  chmod 755 bin/* &> /dev/null
                )
              path: /usr/local/bin/kickstart
              permissions: '0755'
          runcmd:
              - [ '/usr/local/bin/kickstart' ]
              - [ '/opt/bootstrap/run.sh' ]

  FTPImporterASG:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      DesiredCapacity: 1
      LaunchConfigurationName: !Ref FTPImporterLaunchConfiguration
      MaxSize: 4
      MinSize: 0
      TerminationPolicies:
        - ClosestToNextInstanceHour
      VPCZoneIdentifier:
        - !Ref FTPImporterSubnet

Outputs:
  BootstrapKey:
    Value: !Ref BootstrapKey

  FTPDownloadQueue:
    Value: !Ref FTPDownloadQueue
    Export:
      Name: s3strm-ftp-download-queue

  FtpHostname:
    Value: !Ref FtpHostname

  FtpUsername:
    Value: !Ref FtpUsername

  FtpPassword:
    Value: !Ref FtpPassword

  FtpPath:
    Value: !Ref FtpPath
